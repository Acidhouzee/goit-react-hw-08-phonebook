{"version":3,"file":"static/js/447.5ca1d35a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/UserMenu/UserMenu.jsx","pages/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/css/Main.module.css?9687"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css'\n\nconst Loader = () => {\n    return(\n        <div className={css.loader}>\n            <ColorRing\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n        </div>\n    );\n}\n\nexport default Loader;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/selectors\";\nimport { addContact } from \"redux/operations\";\nimport { Button, TextField } from \"@mui/material\";\nimport css from 'css/Main.module.css';\n\n\nconst Form = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChangeName = evt => {\n        setName(evt.target.value);\n    };\n\n    const handleChangeNumber = evt => {\n        setNumber(evt.target.value);\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        if (name.trim() === '' || number.trim() === '') {\n            return;\n        }\n\n        const existingContact = contacts.find(\n            contact =>\n              contact.name.toLowerCase() === name.toLowerCase() ||\n              contact.number === number\n        );\n\n        if(existingContact) {\n            alert(`This ${name} is all ready exists!`)\n        } else {\n\n            const newContact = {\n                name: name,\n                number: number\n            };\n\n            dispatch(addContact(newContact));\n        }\n\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <ul className={css.list}>\n                <li>\n                    <label className={css.user_form_label}>\n                        <TextField\n                            margin=\"normal\"\n                            id=\"outlined-basic\"\n                            label=\"Contact Name\"\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                            value={name}\n                            onChange={handleChangeName}\n                        />\n                    </label>\n                </li>\n                <li>\n                    <label className={css.user_form_label}>\n                        <TextField\n                            margin=\"normal\"\n                            id=\"outlined-basic\"\n                            label=\"Phone number\"\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                            value={number}\n                            onChange={handleChangeNumber}\n                        />\n                    </label>\n                </li>\n            </ul>\n\n            <Button variant=\"contained\" sx={{ mt: 2 }} type=\"submit\">Add Contact</Button>\n        </form>\n    );\n}\n\nexport default Form;","// extracted by mini-css-extract-plugin\nexport default {\"feedback_options_ul\":\"Contacts_feedback_options_ul__i6GgL\",\"feedback_options_li\":\"Contacts_feedback_options_li__zwgoQ\"};","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/operations\";\nimport { selectFilteredContacts } from \"redux/selectors\";\nimport { Button } from \"@mui/material\";\nimport css from '../Contacts/Contacts.module.css';\n\nconst Contacts = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n\n\n    const handleDeleteContact = contactId => {\n        dispatch(deleteContact(contactId));\n    }\n\n    return (\n        <div className=\"feedback-options\">\n            <ul className={css.feedback_options_ul} >\n                {contacts.map(contact => (\n                    <li className={css.feedback_options_li} key={contact.id}>\n                        {contact.name}: {contact.number}\n                        <Button variant=\"contained\" size=\"small\" type=\"button\" onClick={() => handleDeleteContact(contact.id)}>Delete</Button>\n                    </li>\n                ))}\n            </ul>\n        </div>  \n    ); \n};\n\nexport default Contacts;","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from \"redux/filterSlice\";\nimport { TextField } from \"@mui/material\";\n\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n\n    const filterName = event => {\n        const value  = event.target.value.toLowerCase();\n        dispatch(filterContacts(value));\n    };\n    \n    return (\n        <div>\n            <h3>Find contacts by name:</h3>\n            <TextField\n                margin=\"normal\"\n                id=\"outlined-basic\"\n                label=\"Search Contacts...\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n                onChange={filterName}\n            />\n        </div>  \n    )\n};\n\nexport default Filter;","import React from 'react';\nimport { logoutUser } from \"redux/operations\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\nimport { selectUserUserData } from 'redux/selectors';\n\nconst UserMenu = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const user = useSelector(selectUserUserData);\n\n    const handleLogout = () => {\n        dispatch(logoutUser());\n        navigate('/')\n    };\n\n    return(\n        <div>\n            <h1>User Information:</h1>\n            <p><b>User Name:</b> {user.name}</p>\n            <p><b>User Email:</b> {user.email}</p>\n            <Button variant=\"contained\" sx={{ mt: 2 }} onClick={handleLogout}>Logout</Button>\n        </div>\n    );\n}\n\nexport default UserMenu;","import React, { useEffect } from 'react';\nimport Form from 'components/Form/Form';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from '../components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from \"redux/operations\";\nimport { selectAuthentificated, selectError, selectIsLoading } from 'redux/selectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport styles from 'css/Main.module.css'\nimport css from 'css/Main.module.css';\n\n\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    const authentificated = useSelector(selectAuthentificated);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    \n    useEffect(() => {\n        if(!authentificated) return;\n\n        dispatch(fetchContacts());\n    }, [dispatch, authentificated]);\n\n    return(\n        <div className={styles.relative}>\n            <div className={css.form_wrapper}>\n                <h2>Phonebook</h2>\n                <Form/>           \n                <h2>Contacts</h2>\n                <Filter/>\n                {isLoading && !error &&  <Loader/>}  \n                <Contacts/>\n            </div>\n            <div className={styles.container_extra}>\n                <UserMenu></UserMenu>\n            </div>\n        </div>\n    );\n}\n\nexport default ContactsPage;","// extracted by mini-css-extract-plugin\nexport default {\"relative\":\"Main_relative__3-F+j\",\"container\":\"Main_container__-AXei\",\"container_extra\":\"Main_container_extra__GKPgM\",\"list\":\"Main_list__Ac2gq\",\"center\":\"Main_center__fkPCe\",\"title\":\"Main_title__3kQHo\",\"descr\":\"Main_descr__D6K49\",\"form_wrapper\":\"Main_form_wrapper__bXgWY\"};"],"names":["className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","dispatch","useDispatch","contacts","useSelector","getContacts","useState","name","setName","number","setNumber","reset","onSubmit","evt","preventDefault","trim","find","contact","toLowerCase","alert","newContact","addContact","TextField","margin","id","label","type","pattern","title","required","value","onChange","target","Button","variant","sx","mt","selectFilteredContacts","map","size","onClick","contactId","deleteContact","event","filterContacts","navigate","useNavigate","user","selectUserUserData","email","logoutUser","authentificated","selectAuthentificated","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","styles","Loader"],"sourceRoot":""}